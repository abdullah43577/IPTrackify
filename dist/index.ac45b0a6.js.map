{"mappings":"AAAA,MAAMA,EAAeC,SAASC,eAAe,OACvCC,EAAYF,SAASG,cAAc,cACnCC,EAAaJ,SAASG,cAAc,aACpCE,EAAWL,SAASG,cAAc,aAClCG,EAAMN,SAASG,cAAc,QAC7BI,EAAQP,SAASG,cAAc,SAC/BK,EAAOR,SAASG,cAAc,SAE9BM,EAAqBT,SAASG,cAAc,kBAC5CO,EAAoBV,SAASG,cAAc,wBAC3CQ,EAAoBX,SAASG,cAAc,wBAC3CS,EAAeZ,SAASG,cAAc,mBAE5C,IACIU,EACAC,EAFAC,EAAQ,0BAIZ,MAAMC,EACJ,ydAEIC,EAAkB,qEAElBC,EAAc,KAElBT,EAAmBU,UAAUC,IAAI,UACjCV,EAAkBS,UAAUC,IAAI,UAChCT,EAAkBQ,UAAUC,IAAI,UAChCR,EAAaO,UAAUC,IAAI,UAE3B,MAAMC,EAAQd,EAAMc,MACpB,GAAKA,EAEL,GAAIL,EAAYM,KAAKD,GACnBE,EAAUF,EAAO,QACZ,KAAIJ,EAAgBK,KAAKD,GAEzB,CACLd,EAAMiB,MAAMC,OAAS,gBACrB,IAAIJ,EAAQd,EAAMc,MASlB,OARAd,EAAMc,MAAQ,iDACdd,EAAMiB,MAAME,MAAQ,WAEpBC,YAAW,KACTpB,EAAMiB,MAAMC,OAAS,OACrBlB,EAAMc,MAAQA,EACdd,EAAMiB,MAAME,MAAQ,UACnB,IAEL,CAbEH,EAAU,GAAIF,EAahB,GAGFb,EAAKoB,iBAAiB,QAASV,GAC/BlB,SAAS4B,iBAAiB,WAAWC,IACrB,UAAVA,EAAEC,KAAiBZ,GAAA,IAGZ,IAAIa,MAAM,aAAc,CACnCC,QAAS,CAAC,iBAAkB,cAAe,mBAC3CC,UAAW,IACXC,UAAW,IACXC,MAAM,IAJR,MAOMZ,EAAYa,MAAOf,EAAOgB,KAC9B,IACErC,SAASG,cAAc,oBAAoBgB,UAAUmB,OAAO,UAC5D,MAAMC,QAAYC,MAAM,oFAAoFnB,EAAQ,cAAcA,IAAU,KAAKgB,EAAS,WAAWA,IAAW,MAEhL,IAAKE,EAAIE,GAAI,MAAM,IAAIC,MAAM,oEAE7B,MAAMC,QAAaJ,EAAIK,OAGvBnC,EAAmBU,UAAUmB,OAAO,UACpC5B,EAAkBS,UAAUmB,OAAO,UACnC3B,EAAkBQ,UAAUmB,OAAO,UACnC1B,EAAaO,UAAUmB,OAAO,UAE9BpC,EAAU2C,YAAcF,EAAKG,GAC7B1C,EAAWyC,YAAc,GAAGF,EAAKI,SAASC,QAAQL,EAAKI,SAASE,WAAWN,EAAKI,SAASG,YACzF7C,EAASwC,YAAc,MAAMF,EAAKI,SAASI,WAC3C7C,EAAIuC,YAAcF,EAAKS,IAEvBrC,EAAQ,GAAG4B,EAAKI,SAASC,QAAQL,EAAKI,SAASE,uBAE/CpC,EAAM8B,EAAKI,SAASM,IACpBvC,EAAM6B,EAAKI,SAASO,IACpBC,EAAY1C,EAAKC,EACnB,CAAE,MAAO0C,GACPC,QAAQC,MAAM,yBAAyBF,EAAIG,UAC7C,SACE3D,SAASG,cAAc,oBAAoBgB,UAAUC,IAAI,SAC3D,GAGF,IAAIwC,EAAM,KACNC,GAAiB,EAErB,MAAMN,EAAc,CAACF,EAAKC,KACnBO,EASHD,EAAIE,QAAQ,CAACT,EAAKC,GAAM,KARxBM,EAAMG,EAAEC,IAAIjE,GAAc+D,QAAQ,CAACT,EAAKC,GAAM,IAE9CS,EAAEE,UAAU,iDAAkD,CAC5DC,YAAa,4FACZC,MAAMP,GAETC,GAAiB,GAKnBE,EAAEK,OAAO,CAACf,EAAKC,IAAMa,MAAMP,GAAKS,UAAUtD,GAAOuD,WAAS,EAG5DC,UAAUC,YAAYC,oBACpBC,IACE,IAAIC,SAAEA,EAAQC,UAAEA,GAAcF,EAASG,OACvCtB,EAAYoB,EAAUC,GACtBf,IAAyBA,GAAiB,EAAG,IAE/CH,IACED,QAAQqB,IAAI,uBAAwBpB,EAAA","sources":["src/app/script.js"],"sourcesContent":["const mapContainer = document.getElementById(\"map\");\r\nconst ipAddress = document.querySelector(\".ipAddress\");\r\nconst locationEl = document.querySelector(\".location\");\r\nconst timezone = document.querySelector(\".timezone\");\r\nconst isp = document.querySelector(\".isp\");\r\nconst input = document.querySelector(\"input\");\r\nconst send = document.querySelector(\".send\");\r\n\r\nconst ipAddressContainer = document.querySelector(\".ip--container\");\r\nconst locationContainer = document.querySelector(\".location--container\");\r\nconst timezoneContainer = document.querySelector(\".timezone--container\");\r\nconst ispContainer = document.querySelector(\".isp--container\");\r\n\r\nlet popup = \"Your current locationðŸ“Œ\";\r\nlet lat;\r\nlet lng;\r\n\r\nconst validIpTest =\r\n  /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}){1}|((([0-9A-Fa-f]{1,4}:){5}:)(:[0-9A-Fa-f]{1,4}){1,2})|((([0-9A-Fa-f]{1,4}:){4}:)(:[0-9A-Fa-f]{1,4}){1,3})|((([0-9A-Fa-f]{1,4}:){3}:)(:[0-9A-Fa-f]{1,4}){1,4})|((([0-9A-Fa-f]{1,4}:){2}:)(:[0-9A-Fa-f]{1,4}){1,5})|(([0-9A-Fa-f]{1,4}:){1}:)(:[0-9A-Fa-f]{1,4}){1,6}|(:((:[0-9A-Fa-f]{1,4}){1,7}|:))|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){1,4})$/;\r\n\r\nconst validDomainTest = /^(?:(?:https?|ftp):\\/\\/)?(?:www\\.)?[a-z0-9-]+(?:\\.[a-z]{2,}){1,}$/i;\r\n\r\nconst executeCode = () => {\r\n  // remove the container hidden classes\r\n  ipAddressContainer.classList.add(\"hidden\");\r\n  locationContainer.classList.add(\"hidden\");\r\n  timezoneContainer.classList.add(\"hidden\");\r\n  ispContainer.classList.add(\"hidden\");\r\n\r\n  const value = input.value;\r\n  if (!value) return;\r\n\r\n  if (validIpTest.test(value)) {\r\n    fetchData(value, \"\");\r\n  } else if (validDomainTest.test(value)) {\r\n    fetchData(\"\", value);\r\n  } else {\r\n    input.style.border = \"1px solid red\";\r\n    let value = input.value;\r\n    input.value = \"Please enter a valid ip address or domain name\";\r\n    input.style.color = \"red\";\r\n\r\n    setTimeout(() => {\r\n      input.style.border = \"none\";\r\n      input.value = value;\r\n      input.style.color = \"black\";\r\n    }, 3000);\r\n    return;\r\n  }\r\n};\r\n\r\nsend.addEventListener(\"click\", executeCode);\r\ndocument.addEventListener(\"keydown\", e => {\r\n  if (e.key === \"Enter\") executeCode();\r\n});\r\n\r\nconst type = new Typed(\".auto-type\", {\r\n  strings: [\"please wait...\", \"hang tight!\", \"almost there...\"],\r\n  typeSpeed: 100,\r\n  backSpeed: 100,\r\n  loop: true,\r\n});\r\n\r\nconst fetchData = async (value, domain) => {\r\n  try {\r\n    document.querySelector(\".loading-element\").classList.remove(\"hidden\");\r\n    const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=at_w0JxSbeKjw3jQ3b2M2jm9q1V7MyAl${value ? `&ipAddress=${value}` : \"\"}${domain ? `&domain=${domain}` : \"\"}`);\r\n\r\n    if (!res.ok) throw new Error(`Please make sure you're connected to the internet and try again!`);\r\n\r\n    const data = await res.json();\r\n\r\n    // remove the container hidden classes\r\n    ipAddressContainer.classList.remove(\"hidden\");\r\n    locationContainer.classList.remove(\"hidden\");\r\n    timezoneContainer.classList.remove(\"hidden\");\r\n    ispContainer.classList.remove(\"hidden\");\r\n\r\n    ipAddress.textContent = data.ip;\r\n    locationEl.textContent = `${data.location.city} ${data.location.country} ${data.location.geonameId}`;\r\n    timezone.textContent = `UTC${data.location.timezone}`;\r\n    isp.textContent = data.isp;\r\n\r\n    popup = `${data.location.city} ${data.location.country}'s locationðŸ“Œ`;\r\n\r\n    lat = data.location.lat;\r\n    lng = data.location.lng;\r\n    mapFunction(lat, lng);\r\n  } catch (err) {\r\n    console.error(`Something went wrong, ${err.message}`);\r\n  } finally {\r\n    document.querySelector(\".loading-element\").classList.add(\"hidden\");\r\n  }\r\n};\r\n\r\nlet map = null;\r\nlet mapInitialized = false;\r\n\r\nconst mapFunction = (lat, lng) => {\r\n  if (!mapInitialized) {\r\n    map = L.map(mapContainer).setView([lat, lng], 15);\r\n\r\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(map);\r\n\r\n    mapInitialized = true;\r\n  } else {\r\n    map.setView([lat, lng], 15);\r\n  }\r\n\r\n  L.marker([lat, lng]).addTo(map).bindPopup(popup).openPopup();\r\n};\r\n\r\nnavigator.geolocation.getCurrentPosition(\r\n  position => {\r\n    let { latitude, longitude } = position.coords;\r\n    mapFunction(latitude, longitude);\r\n    mapInitialized ? null : (mapInitialized = true);\r\n  },\r\n  error => {\r\n    console.log(\"something went wrong\", error);\r\n  }\r\n);\r\n"],"names":["$12c51030c18c1e33$var$mapContainer","document","getElementById","$12c51030c18c1e33$var$ipAddress","querySelector","$12c51030c18c1e33$var$locationEl","$12c51030c18c1e33$var$timezone","$12c51030c18c1e33$var$isp","$12c51030c18c1e33$var$input","$12c51030c18c1e33$var$send","$12c51030c18c1e33$var$ipAddressContainer","$12c51030c18c1e33$var$locationContainer","$12c51030c18c1e33$var$timezoneContainer","$12c51030c18c1e33$var$ispContainer","$12c51030c18c1e33$var$lat","$12c51030c18c1e33$var$lng","$12c51030c18c1e33$var$popup","$12c51030c18c1e33$var$validIpTest","$12c51030c18c1e33$var$validDomainTest","$12c51030c18c1e33$var$executeCode","classList","add","value","test","$12c51030c18c1e33$var$fetchData","style","border","color","setTimeout","addEventListener","e","key","Typed","strings","typeSpeed","backSpeed","loop","async","domain","remove","res","fetch","ok","Error","data","json","textContent","ip","location","city","country","geonameId","timezone","isp","lat","lng","$12c51030c18c1e33$var$mapFunction","err","console","error","message","$12c51030c18c1e33$var$map","$12c51030c18c1e33$var$mapInitialized","setView","L","map","tileLayer","attribution","addTo","marker","bindPopup","openPopup","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","log"],"version":3,"file":"index.ac45b0a6.js.map"}