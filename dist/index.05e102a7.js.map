{"mappings":"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","sources":["src/app/script.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst mapContainer = document.getElementById(\"map\");\r\nconst ipAddress = document.querySelector(\".ipAddress\");\r\nconst locationEl = document.querySelector(\".location\");\r\nconst timezone = document.querySelector(\".timezone\");\r\nconst isp = document.querySelector(\".isp\");\r\nconst input = document.querySelector(\"input\");\r\nconst send = document.querySelector(\".send\");\r\n\r\nconst ipAddressContainer = document.querySelector(\".ip--container\");\r\nconst locationContainer = document.querySelector(\".location--container\");\r\nconst timezoneContainer = document.querySelector(\".timezone--container\");\r\nconst ispContainer = document.querySelector(\".isp--container\");\r\n\r\nlet popup = \"Your current locationðŸ“Œ\";\r\nlet lat;\r\nlet lng;\r\n\r\nsend.addEventListener(\"click\", () => {\r\n  // remove the container hidden classes\r\n  ipAddressContainer.classList.add(\"hidden\");\r\n  locationContainer.classList.add(\"hidden\");\r\n  timezoneContainer.classList.add(\"hidden\");\r\n  ispContainer.classList.add(\"hidden\");\r\n  const value = input.value;\r\n  if (!value) return;\r\n  fetchData(value);\r\n});\r\n\r\nconst type = new Typed(\".auto-type\", {\r\n  strings: [\"please wait...\", \"hang tight!\", \"almost there...\"],\r\n  typeSpeed: 100,\r\n  backSpeed: 100,\r\n  loop: true,\r\n});\r\n\r\nconst fetchData = async value => {\r\n  try {\r\n    document.querySelector(\".loading-element\").classList.remove(\"hidden\");\r\n    const res = await fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=at_w0JxSbeKjw3jQ3b2M2jm9q1V7MyAl&ipAddress=${value}`);\r\n\r\n    if (!res.ok) throw new Error(`Please make sure you're connected to the internet and try again!`);\r\n\r\n    const data = await res.json();\r\n\r\n    // remove the container hidden classes\r\n    ipAddressContainer.classList.remove(\"hidden\");\r\n    locationContainer.classList.remove(\"hidden\");\r\n    timezoneContainer.classList.remove(\"hidden\");\r\n    ispContainer.classList.remove(\"hidden\");\r\n\r\n    ipAddress.textContent = data.ip;\r\n    locationEl.textContent = `${data.location.city} ${data.location.country} ${data.location.geonameId}`;\r\n    timezone.textContent = `UTC${data.location.timezone}`;\r\n    isp.textContent = data.isp;\r\n\r\n    popup = `${data.location.city} ${data.location.country}'s locationðŸ“Œ`;\r\n\r\n    lat = data.location.lat;\r\n    lng = data.location.lng;\r\n    mapFunction(lat, lng);\r\n  } catch (err) {\r\n    console.error(`Something went wrong, ${err.message}`);\r\n  } finally {\r\n    document.querySelector(\".loading-element\").classList.add(\"hidden\");\r\n  }\r\n};\r\n\r\nlet map = null;\r\nlet mapInitialized = false;\r\n\r\nconst mapFunction = (lat, lng) => {\r\n  if (!mapInitialized) {\r\n    map = L.map(mapContainer).setView([lat, lng], 15);\r\n    console.log(map);\r\n\r\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(map);\r\n\r\n    mapInitialized = true;\r\n  } else {\r\n    map.setView([lat, lng], 15);\r\n  }\r\n\r\n  L.marker([lat, lng]).addTo(map).bindPopup(popup).openPopup();\r\n};\r\n\r\nnavigator.geolocation.getCurrentPosition(\r\n  position => {\r\n    let { latitude, longitude } = position.coords;\r\n    mapFunction(latitude, longitude);\r\n    mapInitialized ? null : (mapInitialized = true);\r\n  },\r\n  error => {\r\n    console.log(\"something went wrong\", error);\r\n  }\r\n);\r\n"],"names":[],"version":3,"file":"index.05e102a7.js.map","sourceRoot":"/__parcel_source_root/"}